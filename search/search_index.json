{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Setting Up BrewData Package with dbt Core and Snowflake","text":"<p>This guide provides a step-by-step walkthrough for setting up and using the BrewData package with dbt Core and Snowflake.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following:</p> <ul> <li>Snowflake account with appropriate permissions</li> <li>Python (&gt;=3.10) installed on your system</li> <li>Basic familiarity with dbt and Snowflake</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>This will run your dbt model while utilizing the BrewData package. For detailed step-by-step instructions, please refer to our Setup Guide which covers:</p> <ol> <li>Installing dbt Core and Snowflake adapter</li> <li>Initializing a new dbt project</li> <li>Configuring Snowflake connection</li> <li>Downloading and uploading the BrewData package</li> <li>Running a dbt model with BrewData integration</li> </ol> <p>The guide includes code examples and configuration details to help you get started quickly.</p>"},{"location":"#additional-resources","title":"Additional Resources","text":"<p>To learn more about configuration options and available strategies, click here.</p> <p>This guide ensures a smooth installation and setup process for dbt Core and the BrewData package in Snowflake.</p>"},{"location":"strategies/","title":"BrewData Strategy Documentation","text":""},{"location":"strategies/#standard-strategies","title":"Standard Strategies","text":"ID Strategy Name Semantic Group 1 Address (Random) address 2 Street Name (Random) address 3 City (Random) address 4 State (Random) address 5 Person Name (Random) name 6 First Name (Random) name 7 Last Name (Random) name 8 Date (yyyy-mm-dd) date 9 Phone Number (Random) phone_number 10 Phone Number (By CountryCode) phone_number 11 License Plate (Random) license_plate 12 SSN (Random) national_id 13 SAID (Random) national_id 14 Job (Random) job 15 Personal Email (Random) email 16 Company Email (Random) email 17 IPv4 Address (Random) ip_address 18 Domain Name (Random) domain_name 19 Device MAC Address (Random) device_address 20 Credit Card Number (Random) credit_card 21 Bank Account (Random) bank_account 22 Swift Code (Random) swift_code 23 Random Number random_number 24 Random Letters random_letters 25 Country (Random) address 26 Checksum checksum 27 Barcode (Random) barcode 28 Color (Random) color 29 Date Time (yyyy-mm-dd hh:mm:ss) date 30 Land Coordinates (Random) land_coordinates 32 Gender (Random) gender 33 Date Number (yyyymmdd) date 34 Building Number (Random) address 35 Address Line1 (Random) address 36 Address Line2 (Random) address 37 Company Name (Random) company 38 Postal Code (Random) address 39 Zipcode (Random) address 40 Credit Card Type (Random) credit_card 41 Credit Card Expiry Date (Random) credit_card 44 Year (yyyy) date 45 Month Number (mm) date 46 Day Number (dd) date 47 RegEx Pattern random_letters 48 State Code (Random) address 49 Telephone Number (Random) phone_number 50 Address (by Distance) address 51 Street Name (by City) address 52 City (by State/Province) address 53 Province (Random) address 54 Person Name (Retain Gender) name 55 First Name (Retain Gender) name 56 Last Name (Retain Religion, Nativity) name 85 Random Alpha Numeric random_alpha_numeric 86 IPv6 Address (Random) ip_address"},{"location":"strategies/#gan-strategies","title":"GAN Strategies","text":"<p>These strategies use different GAN models for synthetic data generation. The appropriate strategy (categorical/numeric) is applied based on the column type.</p> ID Strategy Name Type 59 CTGAN Neural Network Categorical 60 CTGAN Neural Network Numeric 61 TVAE Neural Network Categorical 62 TVAE Neural Network Numeric 63 CopulaGAN Neural Network Categorical 64 CopulaGAN Neural Network Numeric 65 Transformer Neural Network Categorical 66 Transformer Neural Network Numeric 67 NoGAN Categorical 68 NoGAN Numeric"},{"location":"example/quickstart-setup/","title":"Setup","text":""},{"location":"example/quickstart-setup/#step-1-install-dbt-core","title":"Step 1: Install dbt Core","text":"<p>To install dbt Core and the Snowflake adapter, run:</p> <pre><code>pip install dbt-core dbt-snowflake\n</code></pre> <p>Verify the installation with:</p> <pre><code>dbt --version\n</code></pre>"},{"location":"example/quickstart-setup/#step-2-initialize-a-dbt-project","title":"Step 2: Initialize a dbt Project","text":""},{"location":"example/quickstart-setup/#1-create-a-directory-for-your-dbt-project","title":"1. Create a directory for your dbt project:","text":"<pre><code>mkdir my_dbt_project\ncd my_dbt_project\n</code></pre>"},{"location":"example/quickstart-setup/#2-initialize-a-new-dbt-project","title":"2. Initialize a new dbt project:","text":"<pre><code>dbt init\n</code></pre>"},{"location":"example/quickstart-setup/#3-configure-snowflake-connection","title":"3. Configure Snowflake Connection:","text":"<p>During initialization, you'll be prompted to enter your Snowflake connection details: - Profile name    (default is the project name)</p> <ul> <li> <p>Database name</p> </li> <li> <p>Schema name</p> </li> <li> <p>Warehouse name</p> </li> <li> <p>Username</p> </li> <li> <p>Password    (or other authentication method)</p> </li> <li> <p>Account identifier</p> </li> <li> <p>Role    (optional)</p> </li> </ul>"},{"location":"example/quickstart-setup/#step-3script-download-and-upload-the-brewdata-package","title":"Step 3(Script): Download and Upload the BrewData Package","text":""},{"location":"example/quickstart-setup/#1-download-the-script-file","title":"1. download the script file","text":"<ul> <li>download the the <code>brewdata_setup.py</code> and place it in your <code>&lt;DBT_PROJECT&gt;</code> directory where <code>profiles.yml</code> file is present.   #### OR </li> <li>run the following command in the your <code>&lt;DBT_PROJECT&gt;</code> directory where <code>profiles.yml</code> file is present.   <pre><code>curl -O https://raw.githubusercontent.com/brewdata/BrewData-DBT-Snowflakes/refs/heads/main/brewdata_setup.py\n</code></pre></li> </ul>"},{"location":"example/quickstart-setup/#2-run-script","title":"2. Run Script","text":"<ul> <li>run the below command to run the script   <pre><code>python brewdata_setup.py\n</code></pre></li> <li>select the profile and it will place the <code>brewwdata_lib.zip</code>inside the <code>BREWDATA_PACKAGE</code> stage of your <code>Database</code>.</li> <li>(optional) you can provide the stage name while running the script to upload zip file.   <pre><code>python brewdata_setup.py --stage_name &lt;STAGE_NAME_TO_UPLOAD_PACKAGE&gt;\n</code></pre></li> </ul>"},{"location":"example/quickstart-setup/#step-3manual-download-and-upload-the-brewdata-package","title":"Step 3(Manual): Download and Upload the BrewData Package","text":""},{"location":"example/quickstart-setup/#1-download-the-brewdata-package","title":"1. Download the BrewData package","text":"<p>Get the BrewData package ZIP file from the official GitHub repository here.</p>"},{"location":"example/quickstart-setup/#2-upload-the-package-to-snowflake","title":"2. Upload the package to Snowflake","text":"<p>Log in to your Snowflake account via the web UI and follow these steps:</p>"},{"location":"example/quickstart-setup/#3-create-a-snowflake-stage","title":"3. Create a Snowflake Stage","text":"<ol> <li>Navigate to Data in the left-hand menu.</li> <li>Select your database and schema.</li> <li>Click Create &gt; Stage.</li> <li>Name the stage, e.g., <code>&lt;YOUR_SNOWFLAKE_STAGE&gt;</code>.</li> <li>Choose Internal Stage and complete the setup.</li> </ol>"},{"location":"example/quickstart-setup/#4-upload-the-zip-file-to-the-stage","title":"4. Upload the ZIP File to the Stage","text":"<ol> <li>Open the newly created stage.</li> <li>Click Upload and select the BrewData ZIP file.</li> <li>Wait for the upload to complete.</li> </ol>"},{"location":"example/quickstart-setup/#step-4-run-a-dbt-model-with-the-brewdata-package","title":"Step 4: Run a dbt Model with the BrewData Package","text":"<p>Your dbt-python model (inside the <code>models</code> directory) can import the BrewData package and use it within the model.</p>"},{"location":"example/quickstart-setup/#example-using-brewdata-in-a-dbt-python-model","title":"Example: Using BrewData in a dbt-Python Model","text":"<p>Create a new Python model (<code>models/brewdata_dbt_model.py</code>) and include the following code:</p> <pre><code>def model(dbt, session):\n    # Configure the model with required packages and BrewData import\n    dbt.config(\n         materialized=\"table\",\n         packages=[\"shapely\",\"transformers\",\"sympy\", \"faker\", \"requests\", \"xmltodict\", \"xmlschema\", \"pandas\", \"numpy\", \"scikit-learn\", \"scipy\", \"tqdm\", \"pytorch\", \"datasets\"],\n         # tested on python 3.10\n         # packages=[\"shapely==2.0.5\", \"transformers==4.45.2\", \"sympy==1.13.3\", \"faker==30.8.1\", \"requests==2.32.3\", \"xmltodict==0.13.0\", \"xmlschema==2.3.1\", \"pandas==2.0.3\", \"numpy==1.24.3\", \"scikit-learn==1.3.0\", \"scipy==1.10.1\", \"tqdm==4.66.5\", \"pytorch==2.3.0\", \"datasets==2.19.1\"],\n\n         imports=['@BREWDATA_PUBLIC.PUBLIC.PUBLIC_STAGE/brewdata_lib.zip'] # change to your @{DB_NAME}.{SCHEMA_NAME}.{STAGE_NAME}/brewdata_lib.zip\n    )\n\n    # Import custom BrewData module AFTER the config call\n    from brewdata_dbt import FileSyntheticData\n\n    # Fetch customer data from an upstream model\n    customer_data = dbt.source(\"public\", \"customer\") # (schema name, table name)\n    df = customer_data.to_pandas()\n\n    fsd = FileSyntheticData(df=df, locale='en-US')\n\n    # Configuration for synthetic data generation\n    config={\"columns_config\":[\n                              {\"source_column\": \"gender\",\n                              \"pattern\":None, \n                              \"pattern_id\":None, \n                              \"strategy_id\":59, \n                              \"dependent_fields\":[],\n                              \"tokenization_type\": \"NA\"}\n                          ]}\n\n    # Generate synthetic data\n    fsd.start_synthetic(df, config, \"en-US\", limit=None, table_data=None, bias=None)\n    ddf = fsd.synthetic_file_content\n    return ddf\n</code></pre>"},{"location":"example/quickstart-setup/#step-5-run-the-model","title":"Step 5: Run the Model","text":"<p>Execute the following command to run the model:</p> <pre><code>dbt run --select brewdata_dbt_model\n</code></pre>"}]}